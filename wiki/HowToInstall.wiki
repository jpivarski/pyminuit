#summary Instructions for downloading and installing
#labels Phase-Deploy,Featured

I have re-written the installation procedure to be more robust, so that !PyMinuit will be installed correctly on the first try for a wider variety of computers.  This page may look daunting, but when you get into it, you'll see that the instructions are all step-by-step.  By walking through the process in a pedestrian manner, rather than balling it up in an automated script, you would be better able to diagnose problem if something goes wrong or have more information when [HowToInstall#If_something_goes_wrong requesting help].

The installation has been tested on Windows and Ubuntu Linux.  If you have any other Linux distribution, any other variant of Unix, or even a Mac, try the "Linux instructions" and let me know if it works!

==1. Download==

Download both of the following:

    * [http://pyminuit.googlecode.com/files/Minuit-1_7_9.tar.gz Minuit-1_7_9.tar.gz]
    * [http://pyminuit.googlecode.com/files/pyminuit-1.0.2.tgz pyminuit-1.0.2.tgz]

and unpack (unarchive) them in a convenient directory.  Your browser might do this step automatically.

You should now have two new directories, `Minuit-1_7_9` and `pyminuit`.  Minuit is the actual minimization package (in C++) and !PyMinuit is the Python interface.  Both will need to be compiled.

===Extra downloads needed for Windows===

Windows doesn't come with a compiler by default, but there's a compatible compiler available called MinGW.  Download and install both of the following:

  * [http://www.mingw.org/ MinGW] a minimal set of Gnu tools, including the Gnu compiler
  * [http://sourceforge.net/project/showfiles.php?group_id=2435 MSYS] you only need to download "msysCORE-1.0.11-20071204.tar.bz2"

Next, add the location of your new `MSYS/bin` directory to your Windows `Path` variable:  
    # Right click on My computer
    # choose Properties, Advanced, Environment Variables.
    # In the lower list choose to edit the variable named `Path` and add the location to your `MSYS\bin`.

(Naturally, you'll also need to have [http://python.org/download/ Python for Windows] installed.)

==2. Installing on Windows==

Now that you have a compiler and installation directories for `Minuit-1_7_9` and `pyminuit`, let's install them one at a time.

Open a command prompt and change directories to your `Minuit-1_7_9` directory.  Doing so could look like this:

{{{
C:\>cd Minuit-1_7_9
C:\Minuit-1_7_9>
}}}

Now do a "configure-make-make install" procedure:

{{{
C:\Minuit-1_7_9>sh configure
C:\Minuit-1_7_9>make
C:\Minuit-1_7_9>make install
}}}

where each command will generate a lot of output and take a few minutes.  Hopefully, they will not end with an error message (something like "Exit 1" at the end).

Switch to your `pyminuit` directory and run its installation script with these options:

{{{
C:\Minuit-1_7_9>cd ..\pyminuit
C:\pyminuit>python setup.py install build -c mingw32
}}}

This should install !PyMinuit in your standard Python repository, such that you can now "import minuit" from a new Python prompt.

{{{
C:\pyminuit>cd \
C:\>python
Python 2.4.3 (#2, Oct  6 2006, 07:52:30) 
[GCC 4.0.3 (Windows)] on windows
Type "help", "copyright", "credits" or "license" for more information.
>>> import minuit
>>> # (no error messages!)
}}}

If that worked, move on to the [GettingStartedGuide Getting Started Guide] and have fun with your new function minimizer!


==2. Installing on Linux/Unix/Mac in the standard location==

These instructions apply if you have root (superuser) access, and can therefore install in the standard location (usually `/usr`).  If you don't have the necessary permissions or want to install elsewhere, follow the next block of instructions below.

Move to your new `Minuit-1_7_9` directory and install that first.  (Your prompt might look different.)

{{{
% cd Minuit-1_7_9
% ./configure
% make
% make install
}}}

The `configure`, `make` and `make install` commands should produce a lot of output, hopefully not ending with an error message (something with "Exit 1" at the end).

If successful, move to your `pyminuit` directory and run its installation script:

{{{
% cd ../pyminuit
% python setup.py install
}}}

This should install !PyMinuit in your standard Python repository, such that you can now "import minuit" from a new Python prompt.  To perform a fair test of Python's ability to find !PyMinuit, first move out of your installation directory, so that Python doesn't simply access the local copy.

{{{
%cd
%python
Python 2.4.3 (#2, Oct  6 2006, 07:52:30) 
[GCC 4.0.3 (Ubuntu 4.0.3-1ubuntu5)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import minuit
>>> # (no error messages!)
}}}

If that worked, move on to the [GettingStartedGuide Getting Started Guide] and have fun with your new function minimizer!

==2. Installing on Linux/Unix/Mac in a non-standard location==

These instructions apply if you want to install in your home directory or some other non-standard location.  In these instructions, I'll assume that you want to put it in a directory called `/home/username`.

Move to your new `Minuit-1_7_9` directory and configure it with the destination passed as a `--prefix`.  Then `make` and `make install` as usual.  (Your prompt might look different.)

{{{
% cd Minuit-1_7_9
% ./configure --prefix=/home/username
% make
% make install
}}}

The `configure`, `make` and `make install` commands should produce a lot of output, hopefully not ending with an error message (something with "Exit 1" at the end).

Note that this will create directories named `lib` and `include` in your chosen destination.

Next, you need to be sure that Linux knows where to find this new library.  The preferred way to do this is by adding an entry to `/etc/ld.so.conf`, but that would require root access, which might be defeating the point!  Instead, you can add the chosen destination to your `LD_LIBRARY_PATH` environment variable.

{{{
% export LD_LIBRARY_PATH=/home/username:$LD_LIBRARY_PATH     # if you're an sh/bash/zsh user
% setenv LD_LIBRARY_PATH /home/username:$LD_LIBRARY_PATH     # if you're a csh/tcsh user
}}}

(The command `echo $SHELL` will tell you the name of your shell, and therefore which syntax to use.)

Setting the `LD_LIBRARY_PATH` is not considered ideal because your modification will disappear if you ever close your terminal.  To make this change permanent, put the above line in your login script (which might be named `.login`, `.cshrc`, `.bashrc`, `.profile`...).  You can test `LD_LIBRARY_PATH` by

{{{
% echo $LD_LIBRARY_PATH
}}}

to make sure it still contains `/home/username`.

Now that Minuit is installed and Linux knows where, you're ready to install !PyMinuit.  Move to your new `pyminuit` directory and run the installation script, passing your desired installation destination as a `--home`.

{{{
% cd ../pyminuit
% python setup.py install --home=/home/username
}}}

If there are no errors, you only need to set `PYTHONPATH` in the same way as you did `LD_LIBRARY_PATH` (that is, in your login script) and you'll be done!

{{{
% export PYTHONPATH=/home/username/lib/python:$PYTHONPATH     # if you're an sh/bash/zsh user
% setenv PYTHONPATH /home/username/lib/python:$PYTHONPATH     # if you're a csh/tcsh user
}}}

Be sure to save this to your login script, so that this installation will continue to work in new terminals.

To perform a fair test of Python's ability to find !PyMinuit, first move out of your installation directory, so that Python doesn't simply access the local copy.

{{{
% cd
% python
Python 2.4.3 (#2, Oct  6 2006, 07:52:30) 
[GCC 4.0.3 (Ubuntu 4.0.3-1ubuntu5)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import minuit
>>> # (no error messages!)
}}}

If that worked, move on to the [GettingStartedGuide Getting Started Guide] and have fun with your new function minimizer!

==3. If something goes wrong==

If you have any suggestions for improving the installation process, please add it to the [http://code.google.com/p/pyminuit/issues/list Issues Tab].

Be sure to tell me whether the following files exist:
{{{
Minuit-1_7_9/src/.libs/liblcg_Minuit.*
pyminuit/build
/home/username/lib/liblcg_Minuit*
/home/username/lib/python/minuit.so
/usr/lib/liblcg_Minuit*
/usr/lib/python/minuit.so
}}}
and whether you are attempting to install in the standard or a non-standard location.
